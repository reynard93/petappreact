{"version":3,"sources":["SearchContext.js","components/Pet.js","components/SearchBox.js","container/Results.js","components/Carousel.js","components/Modal.js","components/Details.js","components/SearchParams.js","container/App.js","serviceWorker.js","index.js"],"names":["SearchContext","React","createContext","location","animal","breed","breeds","handleAnimalChange","handleBreedChange","handleLocationChange","getBreeds","Provider","Consumer","Pet","_this$props","this","props","name","media","id","photos","photo","filter","hero","value","react_default","a","createElement","es","to","concat","className","src","alt","Component","SearchBox","handleFormSubmit","event","preventDefault","_this","search","_this2","context","onSubmit","htmlFor","onChange","placeholder","onBlur","ANIMALS","map","key","disabled","length","index","petfinder","pf","Results","state","pets","pet","find","output","searchParams","then","data","Array","isArray","setState","components_SearchBox","join","components_Pet","contact","city","ResultsWithContext","Results_Results","Object","assign","Carousel","active","handleIndexClick","target","dataset","_this$state","data-index","onClick","_ref","modalRoot","document","getElementById","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","createPortal","children","Details","loading","showModal","toggleModal","get","description","catch","err","navigate","components_Carousel","components_Modal","SearchParams","handleSearchSubmit","App","list","console","error","aria-label","role","path","components_Details","components_SearchParams","Boolean","window","hostname","match","ReactDOM","render","src_container_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oOAEMA,EAAgBC,IAAMC,cAAc,CACxCC,SAAU,aACVC,OAAQ,GACRC,MAAM,GACNC,OAAQ,GACRC,mBALwC,aAQxCC,kBARwC,aAWxCC,qBAXwC,aAcxCC,UAdwC,eAmB7BC,EAAWX,EAAcW,SACzBC,EAAWZ,EAAcY,SCUvBC,mLA5BL,IAAAC,EAC+CC,KAAKC,MAAlDC,EADFH,EACEG,KAAMb,EADRU,EACQV,OAAQC,EADhBS,EACgBT,MAAOa,EADvBJ,EACuBI,MAAOf,EAD9BW,EAC8BX,SAAUgB,EADxCL,EACwCK,GAE1CC,EAAS,GAETF,GAASA,EAAME,QAAUF,EAAME,OAAOC,QACxCD,EAASF,EAAME,OAAOC,MAAMC,OAAO,SAAAD,GAAK,MAAuB,OAAnBA,EAAM,YAGpD,IAAME,EAAOH,EAAO,GAAKA,EAAO,GAAGI,MAAQ,gCAE3C,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,YAAAC,OAAcX,GAAMY,UAAU,OACpCN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKT,EAAMU,IAAKhB,KAEvBQ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,UAAKV,GACLQ,EAAAC,EAAAC,cAAA,UACGvB,EADH,MACcC,EADd,MACwBF,YApBhBF,IAAMiC,WC+DTC,6MA7DbC,iBAAmB,SAAAC,GACjBA,EAAMC,iBACNC,EAAKvB,MAAMwB,kFAEJ,IAAAC,EAAA1B,KACP,OACEU,EAAAC,EAAAC,cAACf,EAAD,KACG,SAAA8B,GAAO,OACNjB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,QAAMgB,SAAUF,EAAKL,kBACnBX,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,YAAf,WAEEnB,EAAAC,EAAAC,cAAA,SACER,GAAG,WACH0B,SAAUH,EAAQjC,qBAClBe,MAAOkB,EAAQvC,SACf2C,YAAY,cAGhBrB,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,UAAf,SAEEnB,EAAAC,EAAAC,cAAA,UACER,GAAG,SACHK,MAAOkB,EAAQtC,OACfyC,SAAUH,EAAQnC,mBAClBwC,OAAQL,EAAQnC,oBAEhBkB,EAAAC,EAAAC,cAAA,UAAQH,MAAM,IAAd,eACCwB,UAAQC,IAAI,SAAA7C,GAAM,OACjBqB,EAAAC,EAAAC,cAAA,UAAQuB,IAAK9C,EAAQoB,MAAOpB,GACzBA,OAKTqB,EAAAC,EAAAC,cAAA,SAAOiB,QAAQ,SAAf,QAEEnB,EAAAC,EAAAC,cAAA,UACEwB,UAAWT,EAAQpC,OAAO8C,OAC1BjC,GAAG,QACHK,MAAOkB,EAAQrC,MACfwC,SAAUH,EAAQlC,kBAClBuC,OAAQL,EAAQlC,mBAEhBiB,EAAAC,EAAAC,cAAA,eACCe,EAAQpC,OAAO2C,IAAI,SAAC5C,EAAOgD,GAAR,OAClB5B,EAAAC,EAAAC,cAAA,UAAQuB,IAAK7C,EAAQgD,EAAO7B,MAAOnB,GAChCA,OAKToB,EAAAC,EAAAC,cAAA,mCArDU1B,IAAMiC,WCGxBoB,EAAYC,MAEZC,6MACJC,MAAQ,CACNC,KAAM,MAORlB,OAAS,WACPc,EAAUK,IACPC,KAAK,CAAEC,OAAQ,OAAQ1D,SAAUoC,EAAKvB,MAAM8C,aAAa3D,SAC1DC,OAAQmC,EAAKvB,MAAM8C,aAAa1D,OAChCC,MAAOkC,EAAKvB,MAAM8C,aAAazD,QAE9B0D,KAAK,SAAAC,GACJ,IAAIN,EAGAA,EAFAM,EAAKV,UAAUI,MAAQM,EAAKV,UAAUI,KAAKC,IACzCM,MAAMC,QAAQF,EAAKV,UAAUI,KAAKC,KAC7BK,EAAKV,UAAUI,KAAKC,IAEpB,CAACK,EAAKV,UAAUI,KAAKC,KAGvB,GAETpB,EAAK4B,SAAS,CACZT,+FArBN3C,KAAKyB,0CA2BL,OACEf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAACyC,EAAD,CAAW5B,OAAQzB,KAAKyB,SACvBzB,KAAK0C,MAAMC,KAAKT,IAAI,SAAAU,GACnB,IAAItD,EAOJ,OAJEA,EADE4D,MAAMC,QAAQP,EAAIrD,OAAOD,OACnBsD,EAAIrD,OAAOD,MAAMgE,KAAK,MAEtBV,EAAIrD,OAAOD,MAEdoB,EAAAC,EAAAC,cAAC2C,EAAD,CACLpB,IAAOS,EAAIxC,GACXf,OAAUuD,EAAIvD,OACda,KAAQ0C,EAAI1C,KACZZ,MAASA,EACTa,MAAOyC,EAAIzC,MACXf,SAAQ,GAAA2B,OAAK6B,EAAIY,QAAQC,KAAjB,MAAA1C,OAA0B6B,EAAIY,QAAQd,OAC9CtC,GAAIwC,EAAIxC,eAnDEe,aA6DP,SAASuC,EAAmBzD,GACzC,OACES,EAAAC,EAAAC,cAACf,EAAD,KACG,SAAA8B,GAAO,OAAIjB,EAAAC,EAAAC,cAAC+C,EAADC,OAAAC,OAAA,GAAa5D,EAAb,CAAoB8C,aAAcpB,WC9BrCmC,6MAxCbpB,MAAQ,CACNrC,OAAQ,GACR0D,OAAQ,KAaVC,iBAAmB,SAAC1C,GAClBE,EAAK4B,SAAS,CACZW,QAASzC,EAAM2C,OAAOC,QAAQ5B,iFAGzB,IAAAZ,EAAA1B,KAAAmE,EACoBnE,KAAK0C,MAAxBrC,EADD8D,EACC9D,OAAQ0D,EADTI,EACSJ,OAEhB,OACErD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKK,IAAKZ,EAAO0D,GAAQtD,MAAOS,IAAI,mBACpCR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACZX,EAAO6B,IAAI,SAAC5B,EAAMgC,GAAP,OACV5B,EAAAC,EAAAC,cAAA,OAAKuB,IAAK7B,EAAMG,MAAOQ,IAAKX,EAAMG,MAAOO,UAAWsB,IAAUyB,EAAS,SAAW,GAClFK,aAAY9B,EACZ+B,QAAS3C,EAAKsC,iBACd9C,IAAM,+EA1ByB,IAARf,EAAQmE,EAARnE,MAC3BE,EAAS,GAMb,OAJIF,GAASA,EAAME,QAAUF,EAAME,OAAOC,QACxCD,EAASF,EAAME,OAAOC,MAAMC,OAAO,SAAAD,GAAK,MAAuB,OAAnBA,EAAM,YAG7C,CAAED,iBAbUnB,IAAMiC,WCCvBoD,EAAYC,SAASC,eAAe,SAsB3BC,cAnBb,SAAAA,EAAYzE,GAAO,IAAAuB,EAAA,OAAAoC,OAAAe,EAAA,EAAAf,CAAA5D,KAAA0E,IACjBlD,EAAAoC,OAAAgB,EAAA,EAAAhB,CAAA5D,KAAA4D,OAAAiB,EAAA,EAAAjB,CAAAc,GAAAI,KAAA9E,KAAMC,KAED8E,GAAKP,SAAS5D,cAAc,OAHhBY,mFAOjB+C,EAAUS,YAAYhF,KAAK+E,mDAI3BR,EAAUU,YAAYjF,KAAK+E,qCAI3B,OAAOG,uBAAalF,KAAKC,MAAMkF,SAAUnF,KAAK+E,WAhB9B7F,IAAMiC,WCCpBoB,EAAYC,MAgEH4C,6MA5Db1C,MAAQ,CACN2C,SAAS,EACTC,WAAW,KAEbC,YAAc,kBAAM/D,EAAK4B,SAAS,CAAEkC,WAAY9D,EAAKkB,MAAM4C,gGACvC,IAAA5D,EAAA1B,KAClBuC,EAAUK,IACT4C,IAAI,CACH1C,OAAQ,OACR1C,GAAIJ,KAAKC,MAAMG,KACd4C,KAAK,SAAAC,GACN,IACI3D,EADEsD,EAAMK,EAAKV,UAAUK,IAGzBtD,EADE4D,MAAMC,QAAQP,EAAIrD,OAAOD,OACnBsD,EAAIrD,OAAOD,MAAMgE,KAAK,MAEtBV,EAAIrD,OAAOD,MAGrBoC,EAAK0B,SAAS,CACZlD,KAAM0C,EAAI1C,KACVb,OAAQuD,EAAIvD,OACZD,SAAQ,GAAA2B,OAAK6B,EAAIY,QAAQC,KAAjB,MAAA1C,OAA0B6B,EAAIY,QAAQd,OAC9C+C,YAAa7C,EAAI6C,YACjBtF,MAAOyC,EAAIzC,MACXb,QACA+F,SAAS,MAEVK,MAAM,SAAAC,GAAQC,YAAS,wCAG1B,GAAI5F,KAAK0C,MAAM2C,QACb,OAAO3E,EAAAC,EAAAC,cAAA,wBAFF,IAAAuD,EAIiEnE,KAAK0C,MAArExC,EAJDiE,EAICjE,KAAMb,EAJP8E,EAIO9E,OAAQC,EAJf6E,EAIe7E,MAAOF,EAJtB+E,EAIsB/E,SAAUqG,EAJhCtB,EAIgCsB,YAAatF,EAJ7CgE,EAI6ChE,MAAOmF,EAJpDnB,EAIoDmB,UAC3D,OACE5E,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAACiF,EAAD,CAAU1F,MAAOA,IACjBO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKV,GACLQ,EAAAC,EAAAC,cAAA,UAAKvB,EAAL,MAAgBC,EAAhB,MAA0BF,GAC1BsB,EAAAC,EAAAC,cAAA,UAAQyD,QAASrE,KAAKuF,aAAtB,SAA0CrF,GAC1CQ,EAAAC,EAAAC,cAAA,SAAI6E,GAEFH,EACE5E,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAAA,sCAA8BV,EAA9B,MACAQ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,UAAQyD,QAASrE,KAAKuF,aAAtB,OACA7E,EAAAC,EAAAC,cAAA,UAAQyD,QAASrE,KAAKuF,aAAtB,oBAGF,cAtDMrG,IAAMiC,WCSb4E,+LAXXH,YAAS,sCAGT,OACElF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,gBACbN,EAAAC,EAAAC,cAACyC,EAAD,CAAW5B,OAAQzB,KAAKgG,6BAPL9G,IAAMiC,WCK3BoB,EAAYC,MA+FHyD,cA3Fb,SAAAA,EAAYhG,GAAO,IAAAuB,EAAA,OAAAoC,OAAAe,EAAA,EAAAf,CAAA5D,KAAAiG,IACjBzE,EAAAoC,OAAAgB,EAAA,EAAAhB,CAAA5D,KAAA4D,OAAAiB,EAAA,EAAAjB,CAAAqC,GAAAnB,KAAA9E,KAAMC,KAiBRP,qBAAuB,SAAA4B,GACrBE,EAAK4B,SAAS,CACZhE,SAAUkC,EAAM2C,OAAOxD,SApBRe,EAwBnBhC,mBAAqB,SAAA8B,GACnBE,EAAK4B,SACH,CACE/D,OAAQiC,EAAM2C,OAAOxD,MACrBnB,MAAO,IAETkC,EAAK7B,YA9BU6B,EAiCnB/B,kBAAoB,SAAA6B,GAClBE,EAAK4B,SAAS,CACZ9D,MAAOgC,EAAM2C,OAAOxD,SAnCLe,EAsCnB7B,UAAY,WACV6B,EAAK4B,SAAS,CACZ7D,OAAQ,KAENiC,EAAKkB,MAAMrD,OACbkD,EAAUjD,MACP4G,KAAK,CAAE7G,OAAQmC,EAAKkB,MAAMrD,SAC1B2D,KAAK,SAAAC,GAEFA,EAAKV,WACLU,EAAKV,UAAUhD,QACf2D,MAAMC,QAAQF,EAAKV,UAAUhD,OAAOD,OAEpCkC,EAAK4B,SAAS,CACZ7D,OAAQ0D,EAAKV,UAAUhD,OAAOD,QAGhCkC,EAAK4B,SAAS,CAAE7D,OAAQ,OAG3BmG,MAAMS,QAAQC,OAEjB5E,EAAK4B,SAAS,CACZ7D,OAAQ,MA3DZiC,EAAKkB,MAAQ,CACXtD,SAAU,cACVC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,mBAAoBgC,EAAKhC,mBACzBC,kBAAmB+B,EAAK/B,kBACxBC,qBAAsB8B,EAAK9B,qBAC3BC,UAAW6B,EAAK7B,WAVD6B,wEAoEjB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI,KAAV,aACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,kBACPJ,EAAAC,EAAAC,cAAA,QAAMyF,aAAW,SAASC,KAAK,OAA/B,QAKJ5F,EAAAC,EAAAC,cAAChB,EAAD,CAAUa,MAAOT,KAAK0C,OACpBhC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC8C,EAAD,CAAS6C,KAAK,MACd7F,EAAAC,EAAAC,cAAC4F,EAAD,CAASD,KAAK,iBACd7F,EAAAC,EAAAC,cAAC6F,EAAD,CAAcF,KAAK,6BApFbpF,aCCEuF,QACW,cAA7BC,OAAOvH,SAASwH,UAEe,UAA7BD,OAAOvH,SAASwH,UAEhBD,OAAOvH,SAASwH,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASxC,SAASC,eAAe,SD2H3C,kBAAmBwC,WACrBA,UAAUC,cAAcC,MAAMnE,KAAK,SAAAoE,GACjCA,EAAaC","file":"static/js/main.c2bc0704.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SearchContext = React.createContext({\r\n  location: \"Seattle WA\",\r\n  animal: \"\",\r\n  breed:\"\",\r\n  breeds: [],\r\n  handleAnimalChange() {\r\n\r\n  },\r\n  handleBreedChange() {\r\n\r\n  },\r\n  handleLocationChange() {\r\n\r\n  },\r\n  getBreeds() {\r\n\r\n  }\r\n})\r\n\r\nexport const Provider = SearchContext.Provider;\r\nexport const Consumer = SearchContext.Consumer;","import React from 'react'\r\nimport { Link } from '@reach/router'\r\n\r\nclass Pet extends React.Component {\r\n  render(){\r\n    const { name, animal, breed, media, location, id } = this.props\r\n    \r\n    let photos = [];\r\n\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === 'pn')\r\n    }\r\n    \r\n    const hero = photos[0] ? photos[0].value : \"http://placecorgi.com/300/300\"\r\n    \r\n    return (\r\n      <Link to={`/details/${id}`} className=\"pet\">\r\n        <div className=\"image-container\">\r\n          <img src={hero} alt={name} />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h1>{name}</h1>\r\n          <h2>\r\n            {animal} - {breed} - {location}\r\n          </h2>\r\n        </div>\r\n      </Link>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pet;","import React from \"react\";\r\nimport { ANIMALS } from \"petfinder-client\";\r\nimport { Consumer } from \"../SearchContext\";\r\n\r\nclass SearchBox extends React.Component {\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.search();\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {context => (\r\n          <div className=\"search-params\">\r\n            <form onSubmit={this.handleFormSubmit}>\r\n              <label htmlFor=\"location\">\r\n                Location\r\n                <input\r\n                  id=\"location\"\r\n                  onChange={context.handleLocationChange}\r\n                  value={context.location}\r\n                  placeholder=\"Location\"\r\n                />\r\n              </label>\r\n              <label htmlFor=\"animal\">\r\n                Animal\r\n                <select\r\n                  id=\"animal\"\r\n                  value={context.animal}\r\n                  onChange={context.handleAnimalChange}\r\n                  onBlur={context.handleAnimalChange}\r\n                >\r\n                  <option value=\"\">All Animals</option>\r\n                  {ANIMALS.map(animal => (\r\n                    <option key={animal} value={animal}>\r\n                      {animal}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n              <label htmlFor=\"breed\">\r\n                Breed\r\n                <select\r\n                  disabled={!context.breeds.length}\r\n                  id=\"breed\"\r\n                  value={context.breed}\r\n                  onChange={context.handleBreedChange}\r\n                  onBlur={context.handleBreedChange}\r\n                >\r\n                  <option />\r\n                  {context.breeds.map((breed, index) => (\r\n                    <option key={breed + index} value={breed}>\r\n                      {breed}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </label>\r\n              <button>Submit</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { Consumer } from '../SearchContext'\r\nimport Pet from '../components/Pet'\r\nimport pf from 'petfinder-client'\r\nimport SearchBox from '../components/SearchBox'\r\n\r\nconst petfinder = pf()\r\n\r\nclass Results extends Component {\r\n  state = {\r\n    pets: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.search();\r\n  }\r\n\r\n  search = () => {\r\n    petfinder.pet\r\n      .find({ output: \"full\", location: this.props.searchParams.location,\r\n      animal: this.props.searchParams.animal,\r\n      breed: this.props.searchParams.breed\r\n    })\r\n      .then(data => {\r\n        let pets;\r\n        if (data.petfinder.pets && data.petfinder.pets.pet) {\r\n          if (Array.isArray(data.petfinder.pets.pet)) {\r\n            pets = data.petfinder.pets.pet;\r\n          } else {\r\n            pets = [data.petfinder.pets.pet];\r\n          }\r\n        } else {\r\n          pets = []\r\n        }\r\n        this.setState({\r\n          pets\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n      <div className=\"search\">\r\n        <SearchBox search={this.search} />\r\n        {this.state.pets.map(pet => {\r\n          let breed;\r\n\r\n          if (Array.isArray(pet.breeds.breed)) {\r\n            breed = pet.breeds.breed.join(', ')\r\n          } else {\r\n            breed = pet.breeds.breed\r\n          }\r\n          return <Pet \r\n            key = {pet.id}\r\n            animal = {pet.animal}\r\n            name = {pet.name}\r\n            breed = {breed}\r\n            media={pet.media}\r\n            location={`${pet.contact.city}, ${pet.contact.state}`}\r\n            id={pet.id}\r\n          />\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n//needed to reference context on lifecyclemethods\r\nexport default function ResultsWithContext(props) {\r\n  return (\r\n    <Consumer>\r\n      {context => <Results {...props} searchParams={context}/>}\r\n    </Consumer>\r\n  )\r\n}","import React from 'react'\r\n\r\nclass Carousel extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    active: 0\r\n  }\r\n\r\n  static getDerivedStateFromProps({media}) {\r\n    let photos = [];\r\n\r\n    if (media && media.photos && media.photos.photo) {\r\n      photos = media.photos.photo.filter(photo => photo[\"@size\"] === 'pn')\r\n    }\r\n\r\n    return { photos }\r\n  }\r\n\r\n  handleIndexClick = (event) => {\r\n    this.setState({\r\n      active: +event.target.dataset.index\r\n    })\r\n  }\r\n  render() {\r\n    const { photos, active } = this.state;\r\n\r\n    return (\r\n      <div className=\"carousel\">\r\n        <img src={photos[active].value} alt=\"primary animal\"/>\r\n        <div className=\"carousel-smaller\">\r\n          {photos.map((photo,index) => (\r\n            <img key={photo.value} src={photo.value} className={index === active ? 'active' : '' }\r\n            data-index={index}  \r\n            onClick={this.handleIndexClick}\r\n            alt = \"animal thumbnail\"\r\n            ></img>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Carousel","import React from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\nconst modalRoot = document.getElementById('modal')\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.el = document.createElement(\"div\")\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el)\r\n  }\r\n\r\n  render () {\r\n    return createPortal(this.props.children, this.el)\r\n  }\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport pf from 'petfinder-client';\r\nimport { navigate } from '@reach/router';\r\nimport Carousel from './Carousel';\r\nimport Modal from './Modal';\r\n\r\nconst petfinder = pf()\r\n\r\nclass Details extends React.Component {\r\n\r\n  state = {\r\n    loading: true,\r\n    showModal: false\r\n  }\r\n  toggleModal = () => this.setState({ showModal: !this.state.showModal})\r\n  componentDidMount() {\r\n    petfinder.pet\r\n    .get({\r\n      output: \"full\",\r\n      id: this.props.id\r\n    }).then(data => {\r\n      const pet = data.petfinder.pet;\r\n      let breed;\r\n      if (Array.isArray(pet.breeds.breed)) {\r\n        breed = pet.breeds.breed.join(', ')\r\n      } else {\r\n        breed = pet.breeds.breed\r\n      }\r\n\r\n      this.setState({\r\n        name: pet.name,\r\n        animal: pet.animal,\r\n        location: `${pet.contact.city}, ${pet.contact.state}`,\r\n        description: pet.description,\r\n        media: pet.media,\r\n        breed,\r\n        loading: false\r\n      })\r\n    }).catch(err => {navigate(\"/\")})\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <h1>Loading...</h1>\r\n    }\r\n    const { name, animal, breed, location, description, media, showModal} = this.state\r\n    return (\r\n      <div className=\"details\">\r\n        <Carousel media={media}></Carousel>\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h2>{animal} - {breed} - {location}</h2>\r\n          <button onClick={this.toggleModal}>Adopt {name}</button>\r\n          <p>{description}</p>\r\n          {\r\n            showModal ? (\r\n              <Modal>\r\n                <h1> Would you like to adopt {name} ?</h1>\r\n                <div className=\"buttons\">\r\n                  <button onClick={this.toggleModal}>Yes</button>\r\n                  <button onClick={this.toggleModal}>Definitely Yes</button>\r\n                </div>\r\n              </Modal>\r\n            ) : null\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Details","import React from 'react'\r\nimport SearchBox from './SearchBox'\r\nimport { navigate } from '@reach/router';\r\n\r\nclass SearchParams extends React.Component {\r\n  handleSearchSubmit() {\r\n    navigate('/')\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"search-route\">\r\n        <SearchBox search={this.handleSearchSubmit}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchParams;","import React, {Component} from 'react';\nimport './App.css';\nimport { Router, Link } from \"@reach/router\"\nimport pf from 'petfinder-client'\nimport { Provider } from '../SearchContext'\nimport Results from './Results'\nimport Details from '../components/Details'\nimport SearchParams from '../components/SearchParams'\n\nconst petfinder = pf()\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      location: \"Seattle, WA\",\n      animal: \"\",\n      breed: \"\",\n      breeds: [],\n      handleAnimalChange: this.handleAnimalChange,\n      handleBreedChange: this.handleBreedChange,\n      handleLocationChange: this.handleLocationChange,\n      getBreeds: this.getBreeds\n    }\n  }\n  \n  // state = {    \n\n  // }\n\n  handleLocationChange = event => {\n    this.setState({\n      location: event.target.value\n    });\n  };\n\n  handleAnimalChange = event => {\n    this.setState(\n      {\n        animal: event.target.value,\n        breed: \"\"\n      },\n      this.getBreeds\n    );\n  };\n  handleBreedChange = event => {\n    this.setState({\n      breed: event.target.value\n    });\n  };\n  getBreeds = () => {\n    this.setState({\n      breeds: []\n    });\n    if (this.state.animal) {\n      petfinder.breed\n        .list({ animal: this.state.animal })\n        .then(data => {\n          if (\n            data.petfinder &&\n            data.petfinder.breeds &&\n            Array.isArray(data.petfinder.breeds.breed)\n          ) {\n            this.setState({\n              breeds: data.petfinder.breeds.breed\n            });\n          } else {\n            this.setState({ breeds: [] });\n          }\n        })\n        .catch(console.error);\n    } else {\n      this.setState({\n        breeds: []\n      });\n    }\n  }\n\n  render() {\n\n    return ( \n      <div>\n        <header>\n          <Link to =\"/\">Adopt Me!</Link> \n          <Link to=\"/search-params\">\n            <span aria-label=\"search\" role=\"img\">\n              :)\n            </span>\n          </Link> \n        </header>\n        <Provider value={this.state}>  \n          <Router>\n            <Results path=\"/\"/> \n            <Details path=\"/details/:id\"/>\n            <SearchParams path=\"/search-params\"/>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}